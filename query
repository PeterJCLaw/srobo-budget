#!/usr/bin/env python
# -*- coding: utf-8 -*-
import budget, sys
import pylab

class Cmd(object):
    def __init__(self, tree):
        pass
        
class TotalCmd(object):
    "Calculate the total cost of the items in the tree."
    def __init__(self, tree):
        print "Total: Â£%s" % tree.total()

class HistCmd(object):
    "Display a histogram of the items in the tree."
    def __init__(self, tree):
        costs = []
        for i in tree.walk():
            costs.append(i.cost)

        pylab.bar( range(0, len(costs)), costs )
        pylab.show()

commands = { "total": TotalCmd,
             "hist": HistCmd }

def usage():
    global commands

    print "Usage: query CMD SUBTREE_PATH"
    print "\nWhere CMD is one of:"
    for name,cmd in commands.iteritems():
        print "  -%s: %s" % (name, cmd.__doc__)

if len(sys.argv) != 3:
    usage()
    exit(1)

CMD, SUBTREE_PATH = sys.argv[1:]

if CMD not in commands:
    usage()
    exit(1)

t = budget.load_budget("./")
sub = t

if SUBTREE_PATH != "/":
    for p in SUBTREE_PATH.split("/"):
        if p == "":
            continue

        try:
            sub = sub.children[p]
        except KeyError:
            print >> sys.stderr, "'%s' is not a child -- aborting." % p
            exit(1)

if isinstance(sub, budget.BudgetItem):
    "Put the BudgetItem in a BudgetTree to simplify commands"
    i = sub
    sub = budget.BudgetTree("tmp")
    sub.add_child(i)

commands[CMD](sub)

